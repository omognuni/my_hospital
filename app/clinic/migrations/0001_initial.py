# Generated by Django 5.0 on 2024-03-09 01:05
from __future__ import annotations

import clinic.enums
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Doctor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Hospital",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="UninsuredTreatment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="BusinessHours",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day",
                    models.CharField(
                        choices=[
                            ("monday", "MON"),
                            ("tuesday", "TUE"),
                            ("wednesday", "WED"),
                            ("thursday", "THU"),
                            ("friday", "FRI"),
                            ("saturday", "SAT"),
                            ("sunday", "SUN"),
                        ],
                        max_length=100,
                    ),
                ),
                ("opening_time", models.TimeField(null=True)),
                ("lunch_time", models.TimeField(null=True)),
                ("closing_time", models.TimeField(null=True)),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hours",
                        to="clinic.doctor",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DoctorDepartment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="clinic.department",
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="clinic.doctor"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="doctor",
            name="departments",
            field=models.ManyToManyField(
                related_name="doctors",
                through="clinic.DoctorDepartment",
                to="clinic.department",
            ),
        ),
        migrations.AddField(
            model_name="doctor",
            name="hospital",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="doctors",
                to="clinic.hospital",
            ),
        ),
        migrations.CreateModel(
            name="TreatmentRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("desired_datetime", models.DateTimeField()),
                ("expired_datetime", models.DateTimeField(null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("대기중", "PENDING"),
                            ("수락됨", "ACCEPETED"),
                            ("거절됨", "REFUSED"),
                            ("만료됨", "EXPIRED"),
                        ],
                        default=clinic.enums.RequestStatus["PENDING"],
                        max_length=100,
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="clinic.doctor",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="clinic.patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DoctorTreatment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="clinic.doctor"
                    ),
                ),
                (
                    "treatment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="clinic.uninsuredtreatment",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="doctor",
            name="treatments",
            field=models.ManyToManyField(
                related_name="doctors",
                through="clinic.DoctorTreatment",
                to="clinic.uninsuredtreatment",
            ),
        ),
    ]
